<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>it.unipd.dstack.butterfly</groupId>
    <artifactId>butterfly</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>pom</packaging>

    <properties>
        <!-- https://maven.apache.org/general.html#encoding-warning -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.source>1.11</maven.compiler.source>
        <maven.compiler.target>1.11</maven.compiler.target>
        <maven.assembly.version>3.1.1</maven.assembly.version>
        <junit.version>5.7.0</junit.version>
        <mockito.version>2.26.0</mockito.version>
        <hamcrest.version>1.3</hamcrest.version>
        <jacoco.version>0.8.6</jacoco.version>
        <kafka-client.version>2.6.0</kafka-client.version>
        <avro.version>1.10.0</avro.version>
        <confluent.version>5.3.0</confluent.version>
        <logback.version>1.2.3</logback.version>
        <logback.contrib.version>0.1.5</logback.contrib.version>
        <jackson.version>2.9.7</jackson.version>
        <sonarqube.version>3.7.0.1746</sonarqube.version>
        <slf4j.version>1.7.25</slf4j.version>

        <build.directory.config>../config/target</build.directory.config>
        <build.directory.consumer>../consumer/target</build.directory.consumer>
        <build.directory.controller>../controller/target</build.directory.controller>
        <build.directory.email-consumer>../email-consumer/target</build.directory.email-consumer>
        <build.directory.event-processor>../event-processor/target</build.directory.event-processor>
        <build.directory.gitlab-producer>../gitlab-producer/target</build.directory.gitlab-producer>
        <build.directory.json-converter>../json-converter/target</build.directory.json-converter>
        <build.directory.middleware-dispatcher>../middleware-dispatcher/target</build.directory.middleware-dispatcher>
        <build.directory.producer>../producer/target</build.directory.producer>
        <build.directory.redmine-producer>../redmine-producer/target</build.directory.redmine-producer>
        <build.directory.slack-consumer>../slack-consumer/target</build.directory.slack-consumer>
        <build.directory.sonarqube-producer>../sonarqube-producer/target</build.directory.sonarqube-producer>
        <build.directory.telegram-consumer>../telegram-consumer/target</build.directory.telegram-consumer>

        <classes.directory.config>../config/target/classes</classes.directory.config>
        <classes.directory.consumer>../consumer/target/classes</classes.directory.consumer>
        <classes.directory.controller>../controller/target/classes</classes.directory.controller>
        <classes.directory.email-consumer>../email-consumer/target/classes</classes.directory.email-consumer>
        <classes.directory.event-processor>../event-processor/target/classes</classes.directory.event-processor>
        <classes.directory.gitlab-producer>../gitlab-producer/target/classes</classes.directory.gitlab-producer>
        <classes.directory.json-converter>../json-converter/target/classes</classes.directory.json-converter>
        <classes.directory.middleware-dispatcher>../middleware-dispatcher/target/classes</classes.directory.middleware-dispatcher>
        <classes.directory.producer>../producer/target/classes</classes.directory.producer>
        <classes.directory.redmine-producer>../redmine-producer/target/classes</classes.directory.redmine-producer>
        <classes.directory.slack-consumer>../slack-consumer/target/classes</classes.directory.slack-consumer>
        <classes.directory.sonarqube-producer>../sonarqube-producer/target/classes</classes.directory.sonarqube-producer>
        <classes.directory.telegram-consumer>../telegram-consumer/target/classes</classes.directory.telegram-consumer>

        <sources.directory.config>../config/src/main/java</sources.directory.config>
        <sources.directory.consumer>../consumer/src/main/java</sources.directory.consumer>
        <sources.directory.controller>../controller/src/main/java</sources.directory.controller>
        <sources.directory.email-consumer>../email-consumer/src/main/java</sources.directory.email-consumer>
        <sources.directory.event-processor>../event-processor/src/main/java</sources.directory.event-processor>
        <sources.directory.gitlab-producer>../gitlab-producer/src/main/java</sources.directory.gitlab-producer>
        <sources.directory.json-converter>../json-converter/src/main/java</sources.directory.json-converter>
        <sources.directory.middleware-dispatcher>../middleware-dispatcher/src/main/java</sources.directory.middleware-dispatcher>
        <sources.directory.producer>../producer/src/main/java</sources.directory.producer>
        <sources.directory.redmine-producer>../redmine-producer/src/main/java</sources.directory.redmine-producer>
        <sources.directory.slack-consumer>../slack-consumer/src/main/java</sources.directory.slack-consumer>
        <sources.directory.sonarqube-producer>../sonarqube-producer/src/main/java</sources.directory.sonarqube-producer>
        <sources.directory.telegram-consumer>../telegram-consumer/src/main/java</sources.directory.telegram-consumer>
    </properties>


    <repositories>
        <repository>
            <id>confluent</id>
            <name>Confluent</name>
            <url>https://packages.confluent.io/maven/</url>
        </repository>
    </repositories>
    <pluginRepositories>
        <pluginRepository>
            <id>confluent</id>
            <url>https://packages.confluent.io/maven/</url>
        </pluginRepository>
    </pluginRepositories>

    <name>butterfly</name>

    <modules>
        <module>producer</module>
        <module>consumer</module>
        <module>config</module>
        <module>gitlab-producer</module>
        <module>redmine-producer</module>
        <module>sonarqube-producer</module>
        <module>middleware-dispatcher</module>
        <module>telegram-consumer</module>
        <module>avro-schemas</module>
        <module>email-consumer</module>
        <module>event-processor</module>
        <module>controller</module>
        <module>json-converter</module>
        <module>slack-consumer</module>
        <module>coverage-reporting</module>
    </modules>

    <developers>
        <developer>
            <id>dstackgroup</id>
            <name>DStack Group</name>
            <email>dstackgroup@gmail.com</email>
        </developer>
    </developers>

    <dependencies>
        <!-- logging -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>${slf4j.version}</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-jdk14</artifactId>
            <version>${slf4j.version}</version>
        </dependency>

        <!-- kafka client -->
        <dependency>
            <groupId>org.apache.kafka</groupId>
            <artifactId>kafka-clients</artifactId>
            <version>${kafka-client.version}</version>
        </dependency>

        <!-- avro serializer -->
        <dependency>
            <groupId>org.apache.avro</groupId>
            <artifactId>avro</artifactId>
            <version>${avro.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.avro</groupId>
            <artifactId>avro-maven-plugin</artifactId>
            <version>${avro.version}</version>
        </dependency>
        <dependency>
            <groupId>io.confluent</groupId>
            <artifactId>kafka-avro-serializer</artifactId>
            <version>${confluent.version}</version>
        </dependency>

        <!-- unit test -->
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-params</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>

        <!-- mock framework -->
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <version>${mockito.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.objenesis</groupId>
            <artifactId>objenesis</artifactId>
            <version>3.0.1</version>
        </dependency>
        <dependency>
            <groupId>net.bytebuddy</groupId>
            <artifactId>byte-buddy</artifactId>
            <version>1.9.12</version>
        </dependency>

        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest-all</artifactId>
            <version>${hamcrest.version}</version>
            <scope>test</scope>
        </dependency>

        <!-- test coverage -->
        <dependency>
            <groupId>org.jacoco</groupId>
            <artifactId>jacoco-maven-plugin</artifactId>
            <version>${jacoco.version}</version>
        </dependency>
 
        <!-- logging -->
        <!--
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>${logback.version}</version>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback.contrib</groupId>
            <artifactId>logback-json-classic</artifactId>
            <version>${logback.contrib.version}</version>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback.contrib</groupId>
            <artifactId>logback-jackson</artifactId>
            <version>${logback.contrib.version}</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>${jackson.version}</version>
        </dependency>
        -->
    </dependencies>

    <build>
        <pluginManagement><!-- lock down plugins versions to avoid using Maven defaults (may be moved to parent pom) -->
            <plugins>
                <!-- sonarqube analysis -->
                <plugin>
                    <groupId>org.sonarsource.scanner.maven</groupId>
                    <artifactId>sonar-maven-plugin</artifactId>
                    <version>${sonarqube.version}</version>
                </plugin>

                <plugin>
                    <artifactId>maven-dependency-plugin</artifactId>
                    <executions>
                        <execution>
                            <phase>package</phase>
                            <goals>
                                <goal>copy-dependencies</goal>
                            </goals>
                            <configuration>
                                <outputDirectory>${project.build.directory}/lib</outputDirectory>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>

                <!-- checkstyle -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-checkstyle-plugin</artifactId>
                    <version>3.0.0</version>
                    <configuration>
                        <failsOnError>true</failsOnError>
                        <configLocation>checkstyle.xml</configLocation>
                        <consoleOutput>true</consoleOutput>
                    </configuration>
                    <executions>
                        <execution>
                            <phase>package</phase>
                            <goals>
                                <goal>checkstyle</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>

                <!-- clean lifecycle, see https://maven.apache.org/ref/current/maven-core/lifecycles.html#clean_Lifecycle -->
                <plugin>
                    <artifactId>maven-clean-plugin</artifactId>
                    <version>3.1.0</version>
                </plugin>
                <!-- default lifecycle, jar packaging: see https://maven.apache.org/ref/current/maven-core/default-bindings.html#Plugin_bindings_for_jar_packaging -->
                <plugin>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>3.0.2</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>3.8.0</version>
                    <configuration>
                        <release>11</release>
                    </configuration>
                </plugin>
                <plugin>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>2.22.1</version>
                </plugin>
                <plugin>
                    <artifactId>maven-jar-plugin</artifactId>
                    <version>3.0.2</version>
                        <configuration>
                        <excludes>
                            <exclude>./coverage-reporting/**</exclude>
                        </excludes>
                    </configuration>
                </plugin>
                <plugin>
                    <artifactId>maven-install-plugin</artifactId>
                    <version>2.5.2</version>
                </plugin>
                <plugin>
                    <artifactId>maven-deploy-plugin</artifactId>
                    <version>2.8.2</version>
                </plugin>
                <!-- site lifecycle, see https://maven.apache.org/ref/current/maven-core/lifecycles.html#site_Lifecycle -->
                <plugin>
                    <artifactId>maven-site-plugin</artifactId>
                    <version>3.7.1</version>
                </plugin>
                <plugin>
                    <artifactId>maven-project-info-reports-plugin</artifactId>
                    <version>3.0.0</version>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-javadoc-plugin</artifactId>
                    <version>3.0.0</version>
                </plugin>

                <plugin>
                    <groupId>io.confluent</groupId>
                    <artifactId>kafka-avro-serializer</artifactId>
                    <version>${confluent.version}</version>
                </plugin>

                <!-- test coverage
                <plugin>
                    <groupId>org.jacoco</groupId>
                    <artifactId>jacoco-maven-plugin</artifactId>
                    <version>${jacoco.version}</version>
                    <executions>
                        <execution>
                            <id>jacoco-initialize</id>
                            <goals>
                                <goal>prepare-agent</goal>
                            </goals>
                        </execution>
                        <execution>  
                            <id>jacoco-report</id>
                            <phase>test</phase>
                            <goals>
                                <goal>report</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                -->

            </plugins>
        </pluginManagement>

        <!-- test coverage -->
        <plugins>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>${jacoco.version}</version>
                <executions>
                    <execution>
                        <id>jacoco-initialize</id>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>jacoco-report</id>
                        <phase>test</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>

</build>
</project>
